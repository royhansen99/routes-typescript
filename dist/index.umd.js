(function(s){typeof define=="function"&&define.amd?define(s):s()})(function(){"use strict";var s=function(e){var t,r=[];return e instanceof RegExp?t=e:t=h(e,r),{re:t,src:e.toString(),keys:r}},h=function(e,t){return e=e.concat("/?").replace(/\/\(/g,"(?:/").replace(/(\/)?(\.)?:(\w+)(?:(\(.*?\)))?(\?)?|\*/g,function(r,n,u,f,c,a){return r==="*"?(t.push(void 0),r):(t.push(f),n=n||"",""+(a?"":n)+"(?:"+(a?n:"")+(u||"")+(c||"([^/]+?)")+")"+(a||""))}).replace(/([\/.])/g,"\\$1").replace(/\*/g,"(.*)"),new RegExp("^"+e+"$","i")},d=function(e,t,r){for(var n,u=r||0,f=e.length;u<f;++u){var c=e[u],a=c.re,R=c.keys,v=[],g={};if(n=t.match(a)){for(var i=1,f=n.length;i<f;++i){var p=R[i-1],w=typeof n[i]=="string"?unescape(n[i]):n[i];p?g[p]=w:v.push(w)}return{params:g,splats:v,route:c.src,next:u+1}}}},o=function(){return{routes:[],routeMap:{},addRoute:function(e,t){if(!e)throw new Error(" route requires a path");if(!t)throw new Error(" route "+e.toString()+" requires a callback");if(this.routeMap[e])throw new Error("path is already defined: "+e);var r=s(e);r.fn=t,this.routes.push(r),this.routeMap[e]=t},removeRoute:function(e){if(!e)throw new Error(" route requires a path");if(!this.routeMap[e])throw new Error("path does not exist: "+e);for(var t=[],r=0;r<this.routes.length;r++){var n=this.routes[r];n.src!==e&&t.push(n)}this.routes=t,delete this.routeMap[e]},match:function(e,t){var r=d(this.routes,e,t);return r&&(r.fn=this.routeMap[r.route],r.next=this.match.bind(this,e,r.next)),r}}};o.Route=s,o.pathToRegExp=h,o.match=d,o.Router=o,module.exports=o});
//# sourceMappingURL=index.umd.js.map
