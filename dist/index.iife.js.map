{"version":3,"file":"index.iife.js","sources":["../src/index.js"],"sourcesContent":["/**\n * Convert path to route object\n *\n * A string or RegExp should be passed,\n * will return { re, src, keys} obj\n *\n * @param  {String / RegExp} path\n * @return {Object}\n */\n\nvar Route = function (path) {\n  //using 'new' is optional\n\n  var re,\n    keys = []\n\n  if (path instanceof RegExp) re = path\n  else re = pathToRegExp(path, keys)\n\n  return {\n    re,\n    src: path.toString(),\n    keys,\n  }\n}\n\n/**\n * Normalize the given path string,\n * returning a regular expression.\n *\n * An empty array should be passed,\n * which will contain the placeholder\n * key names. For example \"/user/:id\" will\n * then contain [\"id\"].\n *\n * @param  {String} path\n * @param  {Array} keys\n * @return {RegExp}\n */\nvar pathToRegExp = function (path, keys) {\n  path = path\n    .concat('/?')\n    .replace(/\\/\\(/g, '(?:/')\n    .replace(\n      /(\\/)?(\\.)?:(\\w+)(?:(\\(.*?\\)))?(\\?)?|\\*/g,\n      function (_, slash, format, key, capture, optional) {\n        if (_ === '*') {\n          keys.push(undefined)\n          return _\n        }\n\n        keys.push(key)\n        slash = slash || ''\n        return (\n          '' +\n          (optional ? '' : slash) +\n          '(?:' +\n          (optional ? slash : '') +\n          (format || '') +\n          (capture || '([^/]+?)') +\n          ')' +\n          (optional || '')\n        )\n      }\n    )\n    .replace(/([\\/.])/g, '\\\\$1')\n    .replace(/\\*/g, '(.*)')\n  return new RegExp('^' + path + '$', 'i')\n}\n\n/**\n * Attempt to match the given request to\n * one of the routes. When successful\n * a  {fn, params, splats} obj is returned\n *\n * @param  {Array} routes\n * @param  {String} uri\n * @return {Object}\n */\nvar match = function (routes, uri, startAt) {\n  var captures,\n    i = startAt || 0\n\n  for (var len = routes.length; i < len; ++i) {\n    var route = routes[i],\n      re = route.re,\n      keys = route.keys,\n      splats = [],\n      params = {}\n\n    if ((captures = uri.match(re))) {\n      for (var j = 1, len = captures.length; j < len; ++j) {\n        var key = keys[j - 1],\n          val =\n            typeof captures[j] === 'string'\n              ? unescape(captures[j])\n              : captures[j]\n        if (key) {\n          params[key] = val\n        } else {\n          splats.push(val)\n        }\n      }\n      return {\n        params: params,\n        splats: splats,\n        route: route.src,\n        next: i + 1,\n      }\n    }\n  }\n}\n\n/**\n * Default \"normal\" router constructor.\n * accepts path, fn tuples via addRoute\n * returns {fn, params, splats, route}\n *  via match\n *\n * @return {Object}\n */\n\nvar Router = function () {\n  //using 'new' is optional\n  return {\n    routes: [],\n    routeMap: {},\n    addRoute: function (path, fn) {\n      if (!path) throw new Error(' route requires a path')\n      if (!fn)\n        throw new Error(' route ' + path.toString() + ' requires a callback')\n\n      if (this.routeMap[path]) {\n        throw new Error('path is already defined: ' + path)\n      }\n\n      var route = Route(path)\n      route.fn = fn\n\n      this.routes.push(route)\n      this.routeMap[path] = fn\n    },\n\n    removeRoute: function (path) {\n      if (!path) throw new Error(' route requires a path')\n      if (!this.routeMap[path]) {\n        throw new Error('path does not exist: ' + path)\n      }\n\n      var newRoutes = []\n\n      // copy the routes excluding the route being removed\n      for (var i = 0; i < this.routes.length; i++) {\n        var route = this.routes[i]\n        if (route.src !== path) {\n          newRoutes.push(route)\n        }\n      }\n      this.routes = newRoutes\n      delete this.routeMap[path]\n    },\n\n    match: function (pathname, startAt) {\n      var route = match(this.routes, pathname, startAt)\n      if (route) {\n        route.fn = this.routeMap[route.route]\n        route.next = this.match.bind(this, pathname, route.next)\n      }\n      return route\n    },\n  }\n}\n\nRouter.Route = Route\nRouter.pathToRegExp = pathToRegExp\nRouter.match = match\n// back compat\nRouter.Router = Router\n\nmodule.exports = Router\n"],"names":["Route","path","re","keys","pathToRegExp","_","slash","format","key","capture","optional","match","routes","uri","startAt","captures","i","len","route","splats","params","j","val","Router","fn","newRoutes","pathname"],"mappings":"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"}